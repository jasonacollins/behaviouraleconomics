{
  "hash": "6626604362627918f39feafd82398751",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr #added as otherwise inline r code does not execute\n---\n\n\n\n\n\n\n\n\n\n# The reflection effect\n\n## Summary {.unnumbered}\n\n- The reflection effect is an asymmetry in risk preferences: people are typically risk-averse for gains but risk-seeking for losses.\n- This effect can be illustrated through framing experiments, such as the Asian Disease problem, where equivalent outcomes are perceived differently when framed as gains versus losses.\n- The reflection effect can be represented in a value function with diminishing sensitivity to both gains and losses, resulting in a concave function in the gain domain (indicating risk aversion) and a convex function in the loss domain (indicating risk-seeking behaviour).\n\n---\n\n::: {.content-visible when-format=\"html\"}\n\n\n\n\n\n\n\n\n\n\n{{< video https://youtu.be/i28P-j3M-Ps >}}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n:::\n\n## Introduction\n\nThe reflection effect involves an asymmetry in risk preferences in the gain and loss domains.\n\nWhen people make a risky choice related to gains, they are risk averse. They prefer a certain option with value lower than the expected value of the risky choice. When choosing an option in the loss domain, they become risk-seeking. This phenomenon is called the reflection effect.\n\nPut simply, people typically prefer to lock in a sure gain rather than risk it for more, but will take risks to avoid a sure loss.\n\nThe reflection effect might also be thought of as diminishing sensitivity to gains or losses in either direction. This contrasts with expected utility theory, where the pain of losses increases as they grow in size.\n\n## The Asian Disease problem\n\nThe reflection effect explains the framing effects in the following experiment by @kahneman1984.\n\nOne group of experimental subjects were asked the following hypothetical question that would be unlikely to be asked post-Covid-19.\n\n> Imagine that the U.S. is preparing for the outbreak of an unusual Asian disease, which is expected to kill 600 people. Two alternative programs to combat the disease have been proposed. Assume that the exact scientific estimates of the consequences of the programs are as follows:\n>\n> If Program A is adopted, 200 people will be saved.\n>\n> If Program B is adopted, there is a one-third probability that 600 people will be saved and a two-thirds probability that no people will be saved.\n>\n> Which of the two programs would you favour?\n\n72% of participants chose option A.\n\nAnother group of experimental participants were shown the following:\n\n> Imagine that the U.S. is preparing for the outbreak of an unusual Asian disease, which is expected to kill 600 people. Two alternative programs to combat the disease have been proposed. Assume that the exact scientific estimates of the consequences of the programs are as follows:\n>\n> If Program C is adopted, 400 people will die.\n>\n> If Program D is adopted, there is a one-third probability that nobody will die and a two-thirds probability that 600 people will die.\n>\n> Which of the two programs would you favour?\n\n22% of participants chose option C.\n\nDespite their differing presentation, these two scenarios are mathematically identical. Programs A and C both result in 200 people living and 400 dying. Similarly, Programs B and D offer a 1 in 3 chance of saving everyone and a 2 in 3 chance of everyone dying.\n\nThe difference is that the first scenario presents a 'gain frame', focusing on lives saved. The second scenario presents a 'loss frame', focusing on lives lost.\" In the gain frame, 72% chose the certain option A over the risky option B. In the loss frame, only 22% chose the certain option C, meaning 78% preferred the risky option D.\n\nThis shift in preferences demonstrates the reflection effect. When the choice is framed in terms of gains - lives saved - people prefer the certain option. When framed in terms of losses - lives lost - they prefer the risky option.\n\n## The reflection effect in the value function\n\nThe following value function is an example of a function with diminishing sensitivity to both gains and losses. This function generates the reflection effect.\n\n\\begin{equation*}\nv(x)= \\Bigg\\{\n\\begin{matrix}\nx^\\frac{1}{2} \\space \\text{where} \\space x \\geq 0\\\\\n-(-x)^\\frac{1}{2} \\space \\text{where} \\space x<0\n\\end{matrix}\n\\end{equation*}\n\nAs $x$ increases in magnitude in either direction, the marginal change in value from each incremental unit of $x$ decreases. This decreasing marginal change is implemented via the power of one half. For the value of the gain or loss to double, the size of the gain or loss must quadruple.\n\nWhen $x$ is less than zero, we apply a negative sign to $x$ as the power of one half is only defined for positive numbers. We then apply another negative sign after applying the power to indicate the negative value of losses.\n\nThis value function results in risk-averse behaviour in the gain domain and risk-seeking behaviour in the loss domain. The following plot shows the diminishing effect in each direction.\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nloss_fun <- function(x){\n  -(-x)^0.5\n}\ngain_fun <- function(x){\n  x^0.5\n}\n\nloss <- data.frame(\n  x=seq(-10,0,0.05),\n  y=NA\n  )\nloss$y <- loss_fun(loss$x)\n\ngain <- data.frame(\n  x=seq(0,10,0.05),\n  y=NA\n  )\ngain$y <- gain_fun(gain$x)\n\nggplot(mapping = aes(x, y)) +\n  geom_line(data = loss) +\n  geom_line(data = gain) + \n  geom_vline(xintercept = 0, linewidth=0.25)+ \n  geom_hline(yintercept = 0, linewidth=0.25)+\n  labs(x = \"x\", y = \"v(x)\")+\n\n  # Set the theme\n  theme_minimal()+\n\n  theme(axis.text.x = element_blank(),\n            axis.text.y = element_blank(),\n            axis.title=element_text(size=14,face=\"bold\"),\n            axis.title.y = element_text(angle=0, vjust=0.5))\n```\n\n::: {.cell-output-display}\n![The reflection effect](reflection-effect_files/figure-html/fig-reflection-effect-1.png){#fig-reflection-effect width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\nIn the gain domain, the function is concave, indicating risk aversion. In the loss domain, the convex function indicates risk-seeking behaviour. The result is an S-shaped curve.\n\n## An example\n\nThe following numerical example illustrates further.\n\nSuppose an agent has a value function that expresses the reflection effect, with the outcomes in either direction subject to a power of one half.\n\n\\begin{equation*}\nv(x)= \\Bigg\\{\n\\begin{matrix}\nx^\\frac{1}{2} \\space \\text{where} \\space x \\geq 0\\\\\n-(-x)^\\frac{1}{2} \\space \\text{where} \\space x<0\n\\end{matrix}\n\\end{equation*}\n\nThis agent is offered a choice between \\$10 for certain and a 50:50 bet to win \\$20 or end up with nothing. We calculate the value of each option by substituting the outcomes into the value function.\n\nFor the certain gain, we substitute \\$10 into the value function.\n\n\\begin{align*}\nv(\\text{certainty})&=v(10) \\\\[6pt]\n&=10^{\\frac{1}{2}} \\\\[6pt]\n&=3.16\n\\end{align*}\n\nFor the bet, we calculate the probability weighted value of the potential outcomes.\n\n\\begin{align*}\nv(\\text{bet})&=0.5\\times v(20)+0.5\\times v(0) \\\\[6pt]\n&=0.5\\times 20^{\\frac{1}{2}}+0.5\\times 0 \\\\[6pt]\n&=2.24\n\\end{align*}\n\nThe \\$10 for certain has a higher value for the agent. This agent is risk averse in the gain domain and therefore prefers an amount for certain over a bet with the same expected value.\n\nThe following chart illustrates. Plotted are the value of the certain payment of \\$10 and the outcome from winning the gamble, \\$20. A loss results in value of 0.\n\nThe value of the gamble itself is the probability-weighted average of the two gamble outcomes. Due to diminishing marginal utility in the gain domain, the value of the gamble is less than the value of \\$10 with certainty. The extra \\$10 over the certain outcome from winning the bet is less than the value of the first \\$10. As a result, the agent does not want to risk the bet.\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nu <- function(x){\n  ifelse (x >= 0, x^0.5, -(-x)^0.5)\n}\n\ndf <- data.frame(\n  x = seq(-25, 25, 0.1),\n  y = u(seq(-25, 25, 0.1))\n)\n\n#Variables for plot (may not match labels as not done to scale)\n#Payoffs from gamble\nx1<-0 #loss\nx2<-20 #win\nev<-10 #expected value of gamble\nxc<-10 #certain outcome\npx2<-(ev-x1)/(x2-x1)\n\nggplot(mapping = aes(x, y)) +\n\n  #Plot the utility curve\n  geom_line(data = df) +\n  geom_vline(xintercept = 0, linewidth=0.25)+ \n  geom_hline(yintercept = 0, linewidth=0.25)+\n  labs(x = \"x\", y = \"v(x)\")+\n\n  # Set the theme\n  theme_minimal()+\n\n  #remove numbers on each axis\n  theme(axis.text.x = element_blank(),\n            axis.text.y = element_blank(),\n            axis.title=element_text(size=14,face=\"bold\"),\n            axis.title.y = element_text(angle=0, vjust=0.5))+\n\n  #limit to y greater than zero and x greater than -8 (need -8 so space for y-axis labels)\n  coord_cartesian(xlim = c(-25, 25), ylim = c(-5, 5))+\n\n  #Add labels 10, v(10) and line to curve indicating each\n  annotate(\"text\", x = xc, y = 0, label = \"10\", size = 4, hjust = 0.6, vjust = 1.5)+\n  annotate(\"segment\", x = xc, y = 0, xend = xc, yend = u(xc), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"segment\", x = 0, y = u(xc), xend = xc, yend = u(xc), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"text\", x = 0, y = u(xc), label = \"v(10)\", size = 4, hjust = 1.05, vjust = 0.3)+\n\n  #Add expected utility line\n  annotate(\"segment\", x = x1, xend = x2, y = u(x1), yend = u(x2), linewidth = 0.5, colour = \"black\", linetype=\"dotdash\")+\n\n  #Add labels 20, v(20) and line to curve indicating each\n  annotate(\"text\", x = x2, y = 0, label = \"20\", size = 4, hjust = 0.4, vjust = 1.5)+\n  annotate(\"segment\", x = x2, y = 0, xend = x2, yend = u(x2), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"segment\", x = 0, y = u(x2), xend = x2, yend = u(x2), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"text\", x = 0, y = u(x2), label = \"v(20)\", size = 4, hjust = 1.05, vjust = 0.45)+\n\n  #Add labels v(bet) and curve indicating position\n  annotate(\"segment\", x = ev, y = 0, xend = ev, yend = u(x1)+(u(x2)-u(x1))*px2, linewidth = 0.5, colour = \"black\", linetype=\"dashed\")+\n  annotate(\"segment\", x = 0, y = u(x1)+(u(x2)-u(x1))*px2, xend = ev, yend = u(x1)+(u(x2)-u(x1))*px2, linewidth = 0.5, colour = \"black\", linetype=\"dashed\")+\n  annotate(\"text\", x = 0, y = u(x1)+(u(x2)-u(x1))*px2, label = \"v(bet)\", size = 4, hjust = 1.05, vjust = 0.45)\n```\n\n::: {.cell-output-display}\n![The reflection effect in the gain domain](reflection-effect_files/figure-html/fig-reflection-effect-gain-1.png){#fig-reflection-effect-gain width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\nSuppose the agent is now offered another choice. They can now have a certain loss of \\$10 or a 50:50 bet to lose \\$20 or to lose nothing.\n\nAgain, we calculate the value of each option by substituting the outcomes into the value function.\n\nFor the certain loss, we substitute -\\$10 into the value function.\n\n\\begin{align*}\nv(\\text{certainty})&=v(-10) \\\\[6pt]\n&=-10^{\\frac{1}{2}} \\\\[6pt]\n&=-3.16\n\\end{align*}\n\nFor the bet, we calculate the probability weighted value of the potential outcomes.\n\n\\begin{align*}\nv(\\text{bet})&=0.5\\times v(-20)+0.5\\times v(0) \\\\[6pt]\n&=-0.5\\times 20^{\\frac{1}{2}}+0.5\\times 0 \\\\[6pt]\n&=-2.24\n\\end{align*}\n\nThis bet delivers higher value than the certain loss, despite the bet and the certain loss having the same expected value. The agent is willing to take a risk to avoid a loss. They are risk seeking in the loss domain.\n\nThe following chart illustrates. Plotted are the value of the certain payment of -\\$10 and the outcome from losing the gamble, -\\$20. A win results in value of 0.\n\nThe value of the gamble itself is the probability-weighted average of the two gamble outcomes. Due to diminishing marginal utility in the loss domain, the value of the gamble is greater than the value of -\\$10 with certainty. The potential loss of another \\$10 over and above the certain loss is given less weight than the first \\$10. As a result, the agent wants to take the risk.\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nu <- function(x){\n  ifelse (x >= 0, x^0.5, -(-x)^0.5)\n}\n\ndf <- data.frame(\n  x = seq(-25, 25, 0.1),\n  y = u(seq(-25, 25, 0.1))\n)\n\n#Variables for plot (may not match labels as not done to scale)\n#Payoffs from gamble\nx1<--20 #loss\nx2<-0 #win\nev<--10 #expected value of gamble\nxc<--10 #certain outcome\npx2<-(ev-x1)/(x2-x1)\n\nggplot(mapping = aes(x, y)) +\n\n  #Plot the utility curve\n  geom_line(data = df) +\n  geom_vline(xintercept = 0, linewidth=0.25)+ \n  geom_hline(yintercept = 0, linewidth=0.25)+\n  labs(x = \"x\", y = \"v(x)\")+\n\n  # Set the theme\n  theme_minimal()+\n\n  #remove numbers on each axis\n  theme(axis.text.x = element_blank(),\n            axis.text.y = element_blank(),\n            axis.title=element_text(size=14,face=\"bold\"),\n            axis.title.y = element_text(angle=0, vjust=0.5))+\n\n  #limit to y greater than zero and x greater than -8 (need -8 so space for y-axis labels)\n  coord_cartesian(xlim = c(-25, 25), ylim = c(-5, 5))+\n\n  #Add labels -10, v(-10) and line to curve indicating each\n  annotate(\"text\", x = xc, y = 0, label = \"-10\", size = 4, hjust = 0.6, vjust = -0.5)+\n  annotate(\"segment\", x = xc, y = 0, xend = xc, yend = u(xc), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"segment\", x = 0, y = u(xc), xend = xc, yend = u(xc), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"text\", x = 0, y = u(xc), label = \"v(-10)\", size = 4, hjust = -0.1, vjust = 0.3)+\n\n  #Add labels -20, v(-20) and line to curve indicating each\n  annotate(\"text\", x = x1, y = 0, label = \"-20\", size = 4, hjust = 0.5, vjust = -0.5)+\n  annotate(\"segment\", x = x1, y = 0, xend = x1, yend = u(x1), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"segment\", x = 0, y = u(x1), xend = x1, yend = u(x1), linewidth = 0.5, colour = \"black\", linetype=\"dotted\")+\n  annotate(\"text\", x = 0, y = u(x1), label = \"v(-20)\", size = 4, hjust = -0.1, vjust = 0.6)+\n\n  #Add expected utility line\n  annotate(\"segment\", x = x1, xend = x2, y = u(x1), yend = u(x2), linewidth = 0.5, colour = \"black\", linetype=\"dotdash\")+\n\n  #Add labels v(bet) and curve indicating position\n  annotate(\"segment\", x = ev, y = 0, xend = ev, yend = u(x1)+(u(x2)-u(x1))*px2, linewidth = 0.5, colour = \"black\", linetype=\"dashed\")+\n  annotate(\"segment\", x = 0, y = u(x1)+(u(x2)-u(x1))*px2, xend = ev, yend = u(x1)+(u(x2)-u(x1))*px2, linewidth = 0.5, colour = \"black\", linetype=\"dashed\")+\n  annotate(\"text\", x = 0, y = u(x1)+(u(x2)-u(x1))*px2, label = \"v(bet)\", size = 4, hjust = -0.1, vjust = 0.45)\n```\n\n::: {.cell-output-display}\n![The reflection effect in the loss domain](reflection-effect_files/figure-html/fig-reflection-effect-loss-1.png){#fig-reflection-effect-loss width=672}\n:::\n:::\n",
    "supporting": [
      "reflection-effect_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}